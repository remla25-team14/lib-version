name: Release lib-version

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for setuptools-scm to work properly
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools-scm

      - name: Verify version from Git tag
        run: |
          echo "Git tag: ${{ github.ref_name }}"
          python -c "from setuptools_scm import get_version; print(f'Setuptools-scm version: {get_version()}')"

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Use PyPI as primary target

      - name: Publish to GitHub Packages (fallback)
        if: failure()
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
          repository-url: https://upload.pypi.org/legacy/
          # Note: For actual GitHub Packages, you would need to configure
          # the package registry URL and authentication differently

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/